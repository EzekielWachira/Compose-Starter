/*
 * Copyright 2023 Atick Faisal
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
    id("dagger.hilt.android.plugin")
    id("kotlin-kapt")
}

android {
    compileSdk rootProject.ext.compile_sdk_version

    defaultConfig {
        minSdk rootProject.ext.min_sdk_version
        targetSdk rootProject.ext.target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.values()[java_version - 1]
        targetCompatibility JavaVersion.values()[java_version - 1]
    }
    kotlinOptions {
        jvmTarget = "$java_version"
    }
    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    namespace("dev.atick.storage.room")
}

dependencies {
    implementation(project(":core:android"))

    // ... Room
    // ... (https://developer.android.com/jetpack/androidx/releases/room)
    implementation("androidx.room:room-runtime:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    // ... Room Coroutines
    // ... (https://developer.android.com/jetpack/androidx/releases/room)
    implementation("androidx.room:room-ktx:$room_version")

    // ... Dagger Hilt
    // ... (https://developer.android.com/training/dependency-injection/hilt-android)
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
}

kapt {
    correctErrorTypes = true
}